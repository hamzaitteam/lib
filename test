async submitForm(){

 
this.errors = {
          name:'',
         issueDate:'',
         modificationDate:'',
         status:'',
         type:'',
         source:'',
        
        };

        let isValid = true;

        if(!this.name){
          this.errors.name = 'حقل الاسم مطلوب';
          isValid = false;
        }
        if(!this.issueDate){
          this.errors.issueDate = 'حقل تاريخ الاصدار مطلوب';
          isValid = false;
        }
    if(!this.modificationDate){
          this.errors.modificationDate = 'حقل تاريخ التعديل مطلوب';
          isValid = false;
        }
  if(!this.status){
          this.errors.status = 'حقل الحالة مطلوب'  ;
          isValid = false;
        }
   if(!this.type){
          this.errors.type = 'حقل النوع مطلوب'  ;
          isValid = false;
        }
 
   if(!this.source){
          this.errors.source = 'حقل المصدر مطلوب'  ;
          isValid = false;
        }
 

        if(!isValid){return;}
  try {
    const formData = new FormData();
    formData.append('p_liber_nm',this.name);
    formData.append('p_file_id',this.type);
    formData.append('p_status_id',this.status);
    formData.append('p_source_id',this.source);
    formData.append('p_release_date', this.formatDate(this.issueDate));
    formData.append('p_modified_date',this.formatDate(this.modificationDate));
    formData.append('p_liber_file_path','path/file.pdf');
    formData.append('p_note',this.note);
    formData.append('P_INSERT_USER','');
    formData.append('p_liber_file_path',this.pdfFile);
     

 
    const response = await this.axios.post('/insert_library',formData);
    if(response.data.p_err_code==4){

      const statusText = this.$refs.statusSelect.options[this.$refs.statusSelect.selectedIndex].text;
      const typeText = this.$refs.typeSelect.options[this.$refs.typeSelect.selectedIndex].text;
      const sourceText = this.$refs.sourceSelect.options[this.$refs.sourceSelect.selectedIndex].text;
      if(this.type === 6){

this.regulationsCount++;
} else if(this.type === 4){
this.lawsCount++;
 
}
else if(this.type === 5){
this.circularsCount++;

}
      this.responseData.push({
          
              LIBER_NM: this.name,
              FILE_ID: typeText,
              STATUS_NAME: statusText,
              SOURCE_NAME: sourceText ,
              RELEASE_DATE: this.formatDate(this.issueDate),
              MODIFIED_DATE: this.formatDate(this.modificationDate),
              NOTE: this.note,
              p_liber_file_path: this.pdfFile,

         
      });
      this.searchResults = [...this.responseData];

      this.status ='';
      this.type ='';
      this.modificationDate ='';
      this.source ='';
      this.issueDate ='';
      this.name ='';
      this.note ='';
      this.alertMessage = 'تم اضافة عنصر جديد';
      setTimeout(() => {
        this.alertMessage='';
      }, 3000);
    }
  } catch (error) {
    console.log(error);
    
  }
}
