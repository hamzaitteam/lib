methods: {
    nextPage() {
        if (this.currentPage < this.totalPages) {
            this.currentPage++;
            this.submitForm(); // fetch new data for the next page
        }
    },
    previousPage() {
        if (this.currentPage > 1) {
            this.currentPage--;
            this.submitForm(); // fetch new data for the previous page
        }
    },
    async submitForm() {
        try {
            const response = await axios.get('http://127.0.0.1:8000/api/data', {
                params: {
                    "card_id": this.cardId,
                    "first_name": this.firstName,
                    "father_name": this.fatherName,
                    "grandfather_name": this.grandfatherName,
                    "family_name": this.familyName,
                    "page_size": this.perPage,
                    "page_number": this.currentPage
                }
            });

            if(response.data && response.data.data) {
                this.searchResults = response.data.data.map(item => {
                    return {
                        ...item,
                        fullName: `${item.CIT_FIRST} ${item.CIT_FATHER} ${item.CIT_GRANDF} ${item.CIT_FAMLY}`,
                        details: 'DETAILS_LINK_OR_MODAL_TRIGGER'
                    };
                });
                // assuming server returns total number of records
                this.rows = response.data.total ? response.data.total : this.searchResults.length; 
            }
        } catch (error) {
            console.error(error);
        }
    },
    // Other methods...
},
